apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{.Values.app}}
spec:
  selector:
    matchLabels:
      app: {{.Values.app}}
  replicas: {{.Values.frontend.replicas}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: {{.Values.app}}
    spec:
      containers:
      - name: {{.Values.app}}
        image: {{.Values.dockerImage}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        ports:
        - name: webhttp
          containerPort: 80
        readinessProbe:
          httpGet:
            port: webhttp
            path: /
            httpHeaders:
            - name: Host
              {{ if eq .Values.env "prod" }}
              value: www.{{.Values.app}}.nl
              {{ else }}
              value: {{.Values.frontend.prefix}}.{{.Values.env}}.quebble.io
              {{ end }}
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m" # 0.1 core
          limits:
            memory: "256Mi"
            cpu: "200m" # 0.5 core
        command: ['nginx']
        args: ['-g', 'daemon off;']
        envFrom:
          - configMapRef:
              name: config-{{.Values.app}}

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{.Values.app}}
spec:
  {{ if eq .Values.env "prod" }}
  minReplicas: 3
  {{ else if eq .Values.env "staging" }}
  minReplicas: 2
  {{ else }}
  minReplicas: 1
  {{ end }}

  {{ if eq .Values.env "prod" }}
  maxReplicas: 10
  {{ else if eq .Values.env "staging" }}
  maxReplicas: 5
  {{ else }}
  maxReplicas: 1
  {{ end }}
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: {{.Values.app}}
  targetCPUUtilizationPercentage: 80

---

apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: {{.Values.app}}-backendconfig
spec:
  timeoutSec: 60

---

apiVersion: v1
kind: Service
metadata:
  name: {{.Values.app}}
  labels:
    app: {{.Values.app}}
  annotations:
    beta.cloud.google.com/backend-config: '{"ports": {"80":"{{.Values.app}}-backendconfig"}}'
spec:
  type: NodePort
  selector:
    app: {{.Values.app}}
  ports:
  - port: 80
    targetPort: 80

---

apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate
metadata:
  name: {{.Values.app}}
spec:
  domains:
    - {{.Values.frontend.prefix}}.{{.Values.env}}.quebble.io

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{.Values.app}}
  annotations:
    networking.gke.io/managed-certificates: {{.Values.app}}
    external-dns.alpha.kubernetes.io/hostname: {{.Values.frontend.prefix}}.{{.Values.env}}.quebble.io
spec:
  backend:
    serviceName: {{.Values.app}}
    servicePort: 80
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: {{.Values.app}}
          servicePort: 80
      - path: /core/*
        backend:
          serviceName: quebble-core
          servicePort: 80
